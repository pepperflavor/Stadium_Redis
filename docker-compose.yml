version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app-network ### host 모드 제거하고 app-network로 통일
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stadiumdb?schema=public
      - AZURE_STORAGE_STRING=your_azure_storage_connection_string_here
      - AZURE_STORAGE_CONTAINER_NAME=your_azure_storage_container_name_here

      - BCRYPT_SALT_ROUNDS=10

      - JWT_SECRET=your_jwt_secret_here
      - JWT_ACCESS_SECRET=your_jwt_secret_here
      - JWT_REFRESH_SECRET=your_jwt_secret_here
      - JWT_EXPIRE=your_jwt_expiration_time_here

      - SEND_GRID_MAILER_API_KEY=your_sendgrid_api_key_here
      - SEND_GRID_MAILER_FROM_EMAIL=your_sendgrid_from_email_here

      - OLLAMA_BASE_URL=your_ollama_base_url_here
      - OLLAMA_MODEL=your_ollama_model_here
      - NODE_ENV=production

      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - HOST_SERVICE_URL=http://localhost:11434 # 직접 localhost 사용

      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis: # Redis가 켜질 때까지 기다리게 설정
        condition: service_healthy

  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stdiumdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  # redis 추가
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
